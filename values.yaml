# Default values for plex-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: jaymoulin/plex
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: false
  runAsUser: 0

plex:
  # Optionally you can obtain a claim token from https://plex.tv/claim
  # and input here. Keep in mind that the claim tokens expire within
  # 4 minutes.
  claim:
    secret: # plex-claim
    key: claim
    value:  # hardcoded and insecure
  # Add additional environment variables to configure plex
  parameters: {}
  # Opt-in to exposing certain features supported by Plex
  features:
    # Plex DLNA Server
    DLNA:
      enabled: false
      portUDP: 31900
      portTCP: 32469
    # Plex Home Theater via Plex Companion
    homeTheater:
      enabled: false
      port: 30005
    # Bonjour/Avahi network discovery
    bonjour:
      enabled: false
      port: 5353
    # Plex for Roku via Plex Companion
    roku:
      enabled: false
      port: 8324
    # GDM network discovery
    gdm:
      enabled: false
      ports:
        gdm1: 32410
        gdm2: 32412
        gdm3: 32413
        gdm4: 32414

# Configure PVC's for various volumes
volumes:
  config:
    enabled: true
    readonly: false
    paths:
      - "/root/Library/Application\ Support/Plex\ Media\ Server/"
    size: 50Gi
    className: nfs-client
  medias:
    enabled: false
    readonly: true
    path:
      - /media
    size: 20Gi
    className:
  transcode:
    enabled: false
    readonly: false
    paths:
      - /transcode
    size: 5Gi
    className: nfs-client

service:
  type: NodePort
  port: 32400

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

certificate:
  enabled: false
  domain: chart-example.local
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
